#!/bin/bash

# Script de mise √† jour automatique pour Wormhole Timer
# √Ä ex√©cuter apr√®s un git pull sur le serveur Linux

set -e

echo "üîÑ Mise √† jour du Wormhole Timer..."

# V√©rifier qu'on est dans le bon r√©pertoire
if [ ! -f "package.json" ]; then
    echo "‚ùå Erreur : package.json non trouv√©. √ätes-vous dans /var/www/html ?"
    exit 1
fi

# Sauvegarder la configuration (optionnel)
echo "üíæ Sauvegarde de la configuration..."
sudo cp -r . ../backup-$(date +%Y%m%d-%H%M%S) 2>/dev/null || true

# Installer les d√©pendances si n√©cessaire
echo "üì¶ V√©rification des d√©pendances..."
sudo npm install

# Red√©marrer le service
echo "üîÑ Red√©marrage du service..."
sudo systemctl restart wormhole-signaling

# V√©rifier le statut
echo "üìä V√©rification du statut..."
sleep 2
sudo systemctl status wormhole-signaling --no-pager

# V√©rifier l'API
echo "üåê Test de l'API..."
if curl -s http://localhost:3000/api/status > /dev/null; then
    echo "‚úÖ API accessible"
else
    echo "‚ö†Ô∏è  API non accessible - v√©rifiez les logs"
fi

echo "‚úÖ Mise √† jour termin√©e !"
echo "üåê URLs disponibles :"
echo "  - Timer: http://192.168.1.153/"
echo "  - Launchpad: http://192.168.1.153/launchpad"
echo "  - Remote Control: http://192.168.1.153/remote-control"
echo ""
echo "üîß Commandes utiles :"
echo "  - Logs: sudo journalctl -u wormhole-signaling -f"
echo "  - Statut: sudo systemctl status wormhole-signaling"
echo "  - Red√©marrer: sudo systemctl restart wormhole-signaling"
